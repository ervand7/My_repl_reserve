documents = [
    {"type": "passport", "number": "2207 876234", "name": "Василий Гупкин"},
    {"type": "invoice", "number": "11-2", "name": "Геннадий Покемонов"},
    {"type": "insurance", "number": "10006", "name": "Аристарх Павлов"}
]

directories = {
    '1': ['2207 876234', '11-2'],
    '2': ['10006'],
    '3': []
}

print('Команда, которая выведет список всех документов в формате passport "2207 876234" "Василий Гупкин": [l]',
      '\n\nКоманда, которая спросит номер документа и выведет имя человека, которому он принадлежит: [p]',
      '\n\nКоманда, которая спросит номер документа и выведет номер полки, на которой он находится: [s]',
      '\n\nКоманда, которая добавит новый документ в каталог и в перечень полок, спросив его номер, тип, имя владельца и номер полки, на котором он будет храниться: [a]',
      '\n\nКоманда, которая спросит номер документа и удалит его из каталога и из перечня полок: [d]',
      '\n\nКоманда, которая спросит номер новой полки и добавит ее в перечень: [as]',
      '\n\nКоманда, которая спросит номер документа и целевую полку и переместит его с текущей полки на целевую: [m]',
      '\n\nДля завершения сеанса нажмите: [q]')

print()


# ______________________ПРОПИСЫВАЕМ ФУНКЦИИ ДЛЯ КНОПОК__________________________

# Функция для кнопки 'p'
def people():
    a = input('Введите номер документа, чтобы определить владельца: ')
    for i in documents:
        if a == i['number']:
            return f'Владельцем этого документа является {i["name"]}.'
    return 'Запрошенный документ отсутствует в списке'


# Внимание !!!!!!!!!! Для таких случаев нужно указывать дефолтный (по умолчанию) возврат. И он должен быть, как бы это правильно сказать, более глобальный (на первом уровне вложенности). Он будет исполняться в том лишь случае, если первый ретурн (который внутри условия) не исполнен. Всто то же самое и на остальных функциях, кроме функции ввода команд.

# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

# Функция для кнопки 's'
def shelf():
    a = input('Введите номер документа, чтобы узнать номер полки: ')
    for i in directories.items():
        # print(i[1])
        if a in (i[1]):
            b = (f'Этот документ находится на полке № {i[0]}.')
            return b
    return 'Запрошенный документ отсутствует в списке'


# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

# Функция для кнопки 'l'
def list_():
    a = input('Введите номер документа, чтобы узнать полную информацию: ')
    for i in documents:
        if a == i["number"]:
            b = (str(f'Тип документа - {i["type"]}, номер - {i["number"]}, владелец - {i["name"]}.'))
            return b
    return 'Запрошенный документ отсутствует в списке'


# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
# Функция для кнопки 'as'
def add_shelf():
    a = input(
        'Введите номер полки, которую вы хотите создать, чтобы она была затем автоматически добавлена в общий список полок: ')
    if not a in directories.keys():
        directories[a] = []
        return f'\nВы успешно создали новую полку № {a}. \nВот обновленный список полок: {directories}'
    return '\nВы ввели номер уже существующей полки. Пожалуйста, будьте внимательней и повторите попытку.'


# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
# Функция для кнопки 'm'
def move():
    a = input(
        'Введите номер документа, для того, чтобы можно было его в дальнейшем переместить с текущей полки на другую, которую вы выберите: ')
    b = input('Введите номер полки, на которую ранее выбранный документ вы хотите переместить: ')
    if b in directories.keys():
        directories[b].append(a)
    else:
        print('Вы ввели несуществующий номер полки.')

    for i in directories.values():
        if a in i:
            i.remove(a)
            return (f'\nВот так сейчас выглядит текущий список полок с содержимым: \n{directories}')
        return ('Вы ввели номер несуществующего документа. Попробуйте, пожалуйста, еще раз.')


# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

# Большая функция для кнопки 'a'
def add():
    input_type = input('Введите тип документа: ')
    input_doc_number = input('Введите номер документа: ')
    imput_owner = input('Введите имя и фамилию владельца документа: ')
    input_shelf_number = input('Введите цифрой номер полки, на которую вы хотите поместить этот создаваемый документ: ')

    new_for_shelf = input_doc_number
    new_for_documents = {"type": input_type, "number": input_doc_number, "name": imput_owner}

    if input_shelf_number in directories.keys():
        if new_for_documents not in documents:
            documents.append(new_for_documents)
        s = (f'\nВот обновленная информация по каталогу. Новый объект находится в конце списка: \n{documents}')

        for i in directories.keys():
            if (input_shelf_number) in i:
                directories[i].append(new_for_shelf)
        s_1 = (
            f'\nВот обновленная информация по полкам. Вы добавили объект на полку №{input_shelf_number}: \n{directories} \n {s}')

        return s_1
    return '\nВ последнем пункте вы ввели номер несуществующей полки. Попробуйте еще раз.'


# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

# Большая функция для кнопки 'd'
def delete():
    a = input('Введите номер документа для того, чтобы удалить этот документ и со списка документов, и с полок: ')
    for i in documents:
        if a in i.values():
            documents.remove(i)
        s = (f'\nВот обновленная информация по каталогу. А объект № {a} успешно удален из списка: \n{documents}')

    for i in directories.values():
        # print(i)
        if a in i:
            i.remove(a)
            s_1 = (
                f'\nВы успешно удалили документ № {a} с полки. Вот обновленная информация по полкам: \n{directories} \n {s}')
            return (s_1)
    return ('\nВы указали несуществующий номер документа. Пожалуйста, будьте внимательней и попробуйте еще раз.')


# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

# А здесь мы распишем функцию чисто для кнопок.
def main():
    while True:
        user_input = input('\nВведите команду: ')
        if user_input == 'p':
            print(people())
        elif user_input == 's':
            print(shelf())
        elif user_input == 'l':
            print(list_())
        elif user_input == 'as':
            print(add_shelf())
        elif user_input == 'd':
            print(delete())
        elif user_input == 'a':
            print(add())
        elif user_input == 'm':
            print(move())
        elif user_input == 'q':
            print('Ваш сеанс окончен!')
            break
        else:
            print('Вы ввели несуществующую команду. Будьте внимательней и попробуйте еще раз.')


main()
