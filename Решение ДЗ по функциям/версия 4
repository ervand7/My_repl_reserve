# Я работаю секретарем и мне постоянно приходят различные документы. Я должен быть очень внимателен чтобы не потерять ни один документ. Каталог документов хранится в следующем виде:


# Задача №1
# Необходимо реализовать пользовательские команды, которые будут выполнять следующие функции:

# p – people – команда, которая спросит номер документа и выведет имя человека, которому он принадлежит;
# s – shelf – команда, которая спросит номер документа и выведет номер полки, на которой он находится;
# Правильно обработайте ситуации, когда пользователь будет вводить несуществующий документ.
# l– list – команда, которая выведет список всех документов в формате passport "2207 876234" "Василий Гупкин";
# a – add – команда, которая добавит новый документ в каталог и в перечень полок, спросив его номер, тип, имя владельца и номер полки, на котором он будет храниться. Корректно обработайте ситуацию, когда пользователь будет пытаться добавить документ на несуществующую полку.
# Внимание: p, s, l, a - это пользовательские команды, а не названия функций. Функции должны иметь выразительное название, передающие её действие.

documents = [
        {"type": "passport", "number": "2207 876234", "name": "Василий Гупкин"},
        {"type": "invoice", "number": "11-2", "name": "Геннадий Покемонов"},
        {"type": "insurance", "number": "10006", "name": "Аристарх Павлов"}
]
# Перечень полок, на которых находятся документы хранится в следующем виде:

directories = {
        '1': ['2207 876234', '11-2'],
        '2': ['10006'],
        '3': []
}




print('Команда, которая выведет список всех документов в формате passport "2207 876234" "Василий Гупкин": [l]', 
'\n\nКоманда, которая спросит номер документа и выведет имя человека, которому он принадлежит: [p]', 
'\n\nКоманда, которая спросит номер документа и выведет номер полки, на которой он находится: [s]', 
'\n\nКоманда, которая добавит новый документ в каталог и в перечень полок, спросив его номер, тип, имя владельца и номер полки, на котором он будет храниться: [a]', 
'\n\nДля завершения сеанса нажмите: [q]')

print()



def people():
  a = input('Введите номер документа, чтобы определить владельца: ')
  for i in documents:
    if a == i['number']:
      return f'Владельцем этого документа является {i["name"]}.'
  return 'Запрошенный документ отсутствует в списке'





def shelf():
  a = input('Введите номер документа, чтобы узнать номер полки: ')
  for i in directories.items():
    # print(i[1])
    if a in (i[1]):
      b = (f'Этот документ находится на полке № {i[0]}.')
      return b
  return 'Запрошенный документ отсутствует в списке'


def list_():
  a = input('Введите номер документа, чтобы узнать полную информацию: ')
  for i in documents:
    if a == i["number"]:
      b = (str(f'Тип документа - {i["type"]}, номер - {i["number"]}, владелец - {i["name"]}.'))
      return b
  return 'Запрошенный документ отсутствует в списке'



def add():

  input_type = input('Введите тип документа: ')
  input_doc_number = input('Введите номер документа: ')
  imput_owner = input('Введите имя и фамилию владельца документа: ')
  input_shelf_number = input('Введите цифрой номер полки, на которую вы хотите поместить этот создаваемый документ: ')
  new_for_shelf = input_doc_number
  new_for_documents = {"type": input_type, "number": input_doc_number, "name": imput_owner}

  if input_shelf_number in directories.keys():

    if new_for_documents not in documents:
      documents.append(new_for_documents)
    s = (f'\nВот обновленная информация по каталогу. Новый объект находится в конце списка: \n{documents}')

    for i in directories.keys():

      if (input_shelf_number) in i:
        directories[i].append(new_for_shelf)
    s_1 = (f'\nВот обновленная информация по полкам. Вы добавили объект на полку №{input_shelf_number}: \n{directories} \n {s}')

    return s_1
  return '\nВ последнем пункте вы ввели номер несуществующей полки. Попробуйте еще раз.'


# buttons = {'p': people(), 's': shelf(), 'l': list_(), 'a': add()}

def main():
  while True:
    user_input = input('\nВведите команду: ')
    if user_input == 'p':
      print(people())
    elif user_input == 's':
      print(shelf())
    elif user_input == 'l':
      print(list_())
    elif user_input == 'a':
      print(add())
    elif user_input == 'q':
      print('Ваш сеанс окончен!')
      break
    else:
      print('Вы ввели несуществующую команду. Будьте внимательней и попробуйте еще раз.')
main()



